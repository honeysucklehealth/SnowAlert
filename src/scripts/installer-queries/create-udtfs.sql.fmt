USE SCHEMA data;

CREATE FUNCTION IF NOT EXISTS time_slices (n NUMBER, s TIMESTAMP_NTZ, e TIMESTAMP_NTZ)
RETURNS TABLE ( slice_start TIMESTAMP_NTZ, slice_end TIMESTAMP_NTZ )
AS '
  SELECT DATEADD(sec, DATEDIFF(sec, s, e) * ROW_NUMBER() OVER (ORDER BY SEQ4()) / n, s) AS slice_start
       , DATEADD(sec, DATEDIFF(sec, s, e) * 1 / n, slice_start) AS slice_end
  FROM TABLE(GENERATOR(ROWCOUNT => n))
'
;

CREATE FUNCTION IF NOT EXISTS time_slices (n NUMBER, s TIMESTAMP_LTZ, e TIMESTAMP_LTZ)
RETURNS TABLE ( slice_start TIMESTAMP_LTZ, slice_end TIMESTAMP_LTZ )
AS '
  SELECT DATEADD(sec, DATEDIFF(sec, s, e) * ROW_NUMBER() OVER (ORDER BY SEQ4()) / n, s) AS slice_start
       , DATEADD(sec, DATEDIFF(sec, s, e) * 1 / n, slice_start) AS slice_end
  FROM TABLE(GENERATOR(ROWCOUNT => n))
'
;

CREATE OR REPLACE FUNCTION time_slices_before_t (num_slices NUMBER, seconds_in_slice NUMBER, t TIMESTAMP_NTZ)
RETURNS TABLE ( slice_start TIMESTAMP, slice_end TIMESTAMP )
AS '
SELECT slice_start
     , slice_end
FROM TABLE(
  time_slices(
    num_slices,
    DATEADD(sec, -seconds_in_slice * num_slices, t),
    t
  )
)
'
;

CREATE FUNCTION time_slices_before_t (num_slices NUMBER, seconds_in_slice NUMBER)
RETURNS TABLE ( slice_start TIMESTAMP, slice_end TIMESTAMP )
AS '
SELECT slice_start
     , slice_end
FROM TABLE(
  time_slices(
    num_slices,
    DATEADD(sec, -seconds_in_slice * num_slices, CURRENT_TIMESTAMP::TIMESTAMP_NTZ),
    CURRENT_TIMESTAMP::TIMESTAMP_NTZ
  )
)
'
;
